{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\n// import keycloak from '@/keycloak';\nimport landingpage from \"../pages/landingpage/landing-page.vue\";\nimport login from \"../components/LoginComp.vue\";\nimport admin from \"..\";\nconst routes = [{\n  path: '/',\n  component: login\n}, {\n  path: '/landing',\n  component: landingpage\n\n  // meta: { requiresAuth: true },\n}, {\n  path: '/admin',\n  component: admin\n\n  // meta: { requiresAuth: true },\n}, {\n  path: '/manager',\n  component: manager\n\n  // meta: { requiresAuth: true },\n}, {\n  path: '/employee',\n  component: employee\n\n  // meta: { requiresAuth: true },\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// router.beforeEach(async (to, from, next) => {\n//   const authenticated = await keycloak.init({ onLoad: 'login-required' });\n//   if (authenticated) {\n//     const requiredRoles = to.meta.roles;\n//     if (requiredRoles && !keycloak.hasRealmRole(requiredRoles)) {\n//       next('/');\n//     } else {\n//       next();\n//     }\n//   } else {\n//     next('/');\n//   }\n// });\n\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","landingpage","login","admin","routes","path","component","manager","employee","router","history"],"sources":["/Users/gibson/Desktop/dev/keycloak-vue-app/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\n// import keycloak from '@/keycloak';\nimport landingpage from \"../pages/landingpage/landing-page.vue\";\nimport login from \"../components/LoginComp.vue\";\nimport admin from \"..\"\n\nconst routes = [\n  { \n    path: '/',\n   component: login \n},\n\n  {\n    path: '/landing',\n    component:  landingpage,\n    \n    // meta: { requiresAuth: true },\n  },{\n    path: '/admin',\n    component:  admin,\n    \n    // meta: { requiresAuth: true },\n  },{\n    path: '/manager',\n    component:  manager,\n    \n    // meta: { requiresAuth: true },\n  },{\n    path: '/employee',\n    component:  employee,\n    \n    // meta: { requiresAuth: true },\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n});\n\n// router.beforeEach(async (to, from, next) => {\n//   const authenticated = await keycloak.init({ onLoad: 'login-required' });\n//   if (authenticated) {\n//     const requiredRoles = to.meta.roles;\n//     if (requiredRoles && !keycloak.hasRealmRole(requiredRoles)) {\n//       next('/');\n//     } else {\n//       next();\n//     }\n//   } else {\n//     next('/');\n//   }\n// });\n\nexport default router;\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D;AACA,OAAOC,WAAW,MAAM,uCAAuC;AAC/D,OAAOC,KAAK,MAAM,6BAA6B;AAC/C,OAAOC,KAAK,MAAM,IAAI;AAEtB,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACVC,SAAS,EAAEJ;AACd,CAAC,EAEC;EACEG,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAGL;;EAEZ;AACF,CAAC,EAAC;EACAI,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAGH;;EAEZ;AACF,CAAC,EAAC;EACAE,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAGC;;EAEZ;AACF,CAAC,EAAC;EACAF,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAGE;;EAEZ;AACF,CAAC,CACF;AAED,MAAMC,MAAM,GAAGV,YAAY,CAAC;EAC1BW,OAAO,EAAEV,gBAAgB,CAAC,CAAC;EAC3BI;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeK,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}